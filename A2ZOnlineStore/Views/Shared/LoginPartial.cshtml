
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Identity.EntityFrameworkCore

@inject SignInManager<IdentityUser> SignInManager

@if (SignInManager.IsSignedIn(User))
{
    <form asp-area="" asp-controller="Account" asp-action="Logout" id="logoutForm"
          method="post" class="navbar-right">
        <ul class="nav navbar-nav navbar-right">
            @{ if (User.IsInRole("admin"))
                {                        
                    <li>
                        <a asp-controller="Admin"
                            asp-action="Index"
                            class="dropdown-toggle" data-toggle="dropdown">Administration<b class="caret"></b></a>
                        <ul class="dropdown-menu">
                            <li>
                                <a asp-controller="Product" asp-action="AddProduct">Add Product</a>
                            </li>
                            <li>
                                <a asp-controller="Product" asp-action="AddCategory">Add Catgeory</a>
                            </li>
                            <li>
                                <a asp-controller="Product" asp-action="AddBrand">Add Brand</a>
                            </li>                                
                        </ul>

                    </li>
                }
             }
            <li><a href="javascript:document.getElementById('logoutForm').submit()">Log off</a></li>
        </ul>
    </form>
}
else
{
    <ul class="nav navbar-nav navbar-right">
        <li><a id="registerLink" asp-controller="Account" asp-action="Register"> Register </a></li>
        <li><a id="loginLink" asp-controller="Account" asp-action="Login"> Log in </a></li>
    </ul>
}